/* Inefficient implementation of length that takes exponential time */
fun length[n](xs: ptr<list>) -> uint {
    with {
        let xs_null <- xs == null;
    } do if xs_null {
        let out <- 0;
    } else with {
        let temp <- default<list>;
        *xs <-> temp;
        let next <- temp.2;
        /* Recursive call is doubled */
        let r <- length[n-1](next);
    } do {
        let out <- r + 1;
    }
    return out;
}
